name: Build Demo Project

# Trigger the workflow on push to any branch or on pull request creation
on:
  push:
    branches:
      - '**' # Trigger on any branch push (you can adjust this for specific branches)
  pull_request:
    branches:
      - '**' # Trigger on any pull request to any branch

jobs:
  build:
    runs-on: ubuntu-latest # Use the latest Ubuntu runner

    steps:
    # Checkout the repository code
    - name: Checkout code
      uses: actions/checkout@v3

    # Set up JDK (adjust version as needed)
    - name: Set up JDK 11
      uses: actions/setup-java@v3
      with:
        java-version: '11' # You can replace '11' with your Java version, e.g., '17'
        distribution: temurin

    # Cache Maven dependencies to speed up the build process
    - name: Cache Maven dependencies
      uses: actions/cache@v3
      with:
        path: ~/.m2/repository
        key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
        restore-keys: |
          ${{ runner.os }}-maven-

    # Build and test the project using Maven
    - name: Build and test with Maven
      run: mvn clean install --no-transfer-progress

  analyze:
    name: Analyze code with CodeQL
    runs-on: ubuntu-latest
    needs: [build]

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up CodeQL
      uses: github/codeql-action/init@v3
      with:
        languages: 'java'  # Specify the languages you want CodeQL to analyze

    - name: Autobuild
      uses: github/codeql-action/autobuild@v1

    - name: Perform CodeQL Analysis
      uses: github/codeql-action/analyze@v2

          
  deployment-dev:
    runs-on: ubuntu-latest
    environment: 
      name: dev
    needs: build
    steps:
      - name: deploy
        run: |
          echo "Deploying to Dev..."
          
  deployment-prod:
    runs-on: ubuntu-latest
    environment: 
      name: production
    needs: [deployment-dev, analyze]
    steps:
      - name: deploy
        run: |
          echo "Deploying to Production... using Option App Restart Mode ${{ vars.restart_mode }} from environment"
    # Optionally, run additional tests (e.g., integration tests, coverage) after build
    # - name: Run additional tests
    #   run: mvn verify # You can adjust this if you have other testing phases
